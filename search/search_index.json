{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Deep learning with ImJoy \u00b6 We provide a Python library powered by ImJoy to perform Deep Learning with U net architecture. We provide different analysis workflows (you can also select them from the banners). ImJoy \u00b6 ImJoy is image processing platform with an easy to use interface powered by a Python engine running in the background. ImJoy plays a central role in most analysis workflows. We provide links to install the different ImJoy plugins in dedicated ImJoy workspaces. Once installed, ImJoy remembers the workspaces and plugins and you simply have to open the web app and select the appropriate workspace https://imjoy.io/#/app If you press on the installation link, the ImJoy web app will open and display a dialog asking if you want to install the specified plugin. To confirm, press the install button. Plugins require the ImJoy Plugin Engine , to perform computations in Python. You will need to install it only once, but launch it each time you work with ImJoy. For more information for how to install and use the pluging engine, please consult the ImJoy documentation .","title":"Overview"},{"location":"#deep-learning-with-imjoy","text":"We provide a Python library powered by ImJoy to perform Deep Learning with U net architecture. We provide different analysis workflows (you can also select them from the banners).","title":"Deep learning with ImJoy"},{"location":"#imjoy","text":"ImJoy is image processing platform with an easy to use interface powered by a Python engine running in the background. ImJoy plays a central role in most analysis workflows. We provide links to install the different ImJoy plugins in dedicated ImJoy workspaces. Once installed, ImJoy remembers the workspaces and plugins and you simply have to open the web app and select the appropriate workspace https://imjoy.io/#/app If you press on the installation link, the ImJoy web app will open and display a dialog asking if you want to install the specified plugin. To confirm, press the install button. Plugins require the ImJoy Plugin Engine , to perform computations in Python. You will need to install it only once, but launch it each time you work with ImJoy. For more information for how to install and use the pluging engine, please consult the ImJoy documentation .","title":"ImJoy"},{"location":"about/licence/","text":"License \u00b6 MIT License Copyright \u00a9 Wei Ouyang Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licence"},{"location":"about/licence/#license","text":"MIT License Copyright \u00a9 Wei Ouyang Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/release-notes/","text":"Release Notes \u00b6 Upgrading \u00b6 Maintenance team \u00b6 The current and past team members. @oeway @muellerflorian Version \u00b6 Initial release","title":"Release Notes"},{"location":"about/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"about/release-notes/#upgrading","text":"","title":"Upgrading"},{"location":"about/release-notes/#maintenance-team","text":"The current and past team members. @oeway @muellerflorian","title":"Maintenance team"},{"location":"about/release-notes/#version","text":"Initial release","title":"Version"},{"location":"anet/anet-api/","text":"Anet-Lite \u00b6 Generated data during training \u00b6 During training, the Anet ImJoy plugin stores the model ( .hdf5 files) together with necessary events to call Tensorflow in a folder __model__ within the data folder TODO - currently in the workspace . Each training has a dedicated user-defined name, allowing to store results of different trainings. The example below shows the __model__ folder containg the results of two trainings ( test1 , test2 ). The file test1 x_model__.hdf5 containes the model, the folder test1 xlogs the events file for TensorBoard. . \u251c\u2500 __model__/ \u251c\u2500 test1 x_model__.hdf5 \u251c\u2500 test2 x_model__.hdf5 \u2502 \u251c\u2500 test1 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359258.HOSTURL \u2502 \u251c\u2500 test2 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359260.HOSTURL . Using Tensorboard \u00b6 TensorBoard provides a suite of visualization tools to make it easier to understand, debug, and optimize DeepLearning programs. To use Tensorboard, open a terminal and navigate to the folder containing the events file, e.g. test1 xlogs from the example above. Then call TensorBoard with the following command. python -m tensorboard.main --logdir=. TensorBoard 1.5.1 at LOCALHOST:6006 (Press CTRL+C to quit) You will obtain the local host LOCALHOST address to open Tensorboard, open a browser and paste the entire address. If you receive an error message such as This site can\u2019t be reached , replace the local host address by 127.0.01 , e.g. for the example above: http://127.0.0.1:6006 .","title":"API"},{"location":"anet/anet-api/#anet-lite","text":"","title":"Anet-Lite"},{"location":"anet/anet-api/#generated-data-during-training","text":"During training, the Anet ImJoy plugin stores the model ( .hdf5 files) together with necessary events to call Tensorflow in a folder __model__ within the data folder TODO - currently in the workspace . Each training has a dedicated user-defined name, allowing to store results of different trainings. The example below shows the __model__ folder containg the results of two trainings ( test1 , test2 ). The file test1 x_model__.hdf5 containes the model, the folder test1 xlogs the events file for TensorBoard. . \u251c\u2500 __model__/ \u251c\u2500 test1 x_model__.hdf5 \u251c\u2500 test2 x_model__.hdf5 \u2502 \u251c\u2500 test1 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359258.HOSTURL \u2502 \u251c\u2500 test2 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359260.HOSTURL .","title":"Generated data during training"},{"location":"anet/anet-api/#using-tensorboard","text":"TensorBoard provides a suite of visualization tools to make it easier to understand, debug, and optimize DeepLearning programs. To use Tensorboard, open a terminal and navigate to the folder containing the events file, e.g. test1 xlogs from the example above. Then call TensorBoard with the following command. python -m tensorboard.main --logdir=. TensorBoard 1.5.1 at LOCALHOST:6006 (Press CTRL+C to quit) You will obtain the local host LOCALHOST address to open Tensorboard, open a browser and paste the entire address. If you receive an error message such as This site can\u2019t be reached , replace the local host address by 127.0.01 , e.g. for the example above: http://127.0.0.1:6006 .","title":"Using Tensorboard"},{"location":"anet/anet-overview/","text":"Anet-Lite \u00b6 Generated data during training \u00b6 During training, the Anet ImJoy plugin stores the model ( .hdf5 files) together with necessary events to call Tensorflow in a folder __model__ within the data folder TODO - currently in the workspace . Each training has a dedicated user-defined name, allowing to store results of different trainings. The example below shows the __model__ folder containg the results of two trainings ( test1 , test2 ). The file test1 x_model__.hdf5 containes the model, the folder test1 xlogs the events file for TensorBoard. . \u251c\u2500 __model__/ \u251c\u2500 test1 x_model__.hdf5 \u251c\u2500 test2 x_model__.hdf5 \u2502 \u251c\u2500 test1 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359258.HOSTURL \u2502 \u251c\u2500 test2 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359260.HOSTURL . Using Tensorboard \u00b6 TensorBoard provides a suite of visualization tools to make it easier to understand, debug, and optimize DeepLearning programs. To use Tensorboard, open a terminal and navigate to the folder containing the events file, e.g. test1 xlogs from the example above. Then call TensorBoard with the following command. python -m tensorboard.main --logdir=. TensorBoard 1.5.1 at LOCALHOST:6006 (Press CTRL+C to quit) You will obtain the local host LOCALHOST address to open Tensorboard, open a browser and paste the entire address. If you receive an error message such as This site can\u2019t be reached , replace the local host address by 127.0.01 , e.g. for the example above: http://127.0.0.1:6006 .","title":"Overview"},{"location":"anet/anet-overview/#anet-lite","text":"","title":"Anet-Lite"},{"location":"anet/anet-overview/#generated-data-during-training","text":"During training, the Anet ImJoy plugin stores the model ( .hdf5 files) together with necessary events to call Tensorflow in a folder __model__ within the data folder TODO - currently in the workspace . Each training has a dedicated user-defined name, allowing to store results of different trainings. The example below shows the __model__ folder containg the results of two trainings ( test1 , test2 ). The file test1 x_model__.hdf5 containes the model, the folder test1 xlogs the events file for TensorBoard. . \u251c\u2500 __model__/ \u251c\u2500 test1 x_model__.hdf5 \u251c\u2500 test2 x_model__.hdf5 \u2502 \u251c\u2500 test1 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359258.HOSTURL \u2502 \u251c\u2500 test2 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359260.HOSTURL .","title":"Generated data during training"},{"location":"anet/anet-overview/#using-tensorboard","text":"TensorBoard provides a suite of visualization tools to make it easier to understand, debug, and optimize DeepLearning programs. To use Tensorboard, open a terminal and navigate to the folder containing the events file, e.g. test1 xlogs from the example above. Then call TensorBoard with the following command. python -m tensorboard.main --logdir=. TensorBoard 1.5.1 at LOCALHOST:6006 (Press CTRL+C to quit) You will obtain the local host LOCALHOST address to open Tensorboard, open a browser and paste the entire address. If you receive an error message such as This site can\u2019t be reached , replace the local host address by 127.0.01 , e.g. for the example above: http://127.0.0.1:6006 .","title":"Using Tensorboard"},{"location":"annapalm/annapalm-overview/","text":"Anet-Lite \u00b6 Generated data during training \u00b6 During training, the Anet ImJoy plugin stores the model ( .hdf5 files) together with necessary events to call Tensorflow in a folder __model__ within the data folder TODO - currently in the workspace . Each training has a dedicated user-defined name, allowing to store results of different trainings. The example below shows the __model__ folder containg the results of two trainings ( test1 , test2 ). The file test1 x_model__.hdf5 containes the model, the folder test1 xlogs the events file for TensorBoard. . \u251c\u2500 __model__/ \u251c\u2500 test1 x_model__.hdf5 \u251c\u2500 test2 x_model__.hdf5 \u2502 \u251c\u2500 test1 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359258.HOSTURL \u2502 \u251c\u2500 test2 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359260.HOSTURL . Using Tensorboard \u00b6 TensorBoard provides a suite of visualization tools to make it easier to understand, debug, and optimize DeepLearning programs. To use Tensorboard, open a terminal and navigate to the folder containing the events file, e.g. test1 xlogs from the example above. Then call TensorBoard with the following command. python -m tensorboard.main --logdir=. TensorBoard 1.5.1 at LOCALHOST:6006 (Press CTRL+C to quit) You will obtain the local host LOCALHOST address to open Tensorboard, open a browser and paste the entire address. If you receive an error message such as This site can\u2019t be reached , replace the local host address by 127.0.01 , e.g. for the example above: http://127.0.0.1:6006 .","title":"Overview"},{"location":"annapalm/annapalm-overview/#anet-lite","text":"","title":"Anet-Lite"},{"location":"annapalm/annapalm-overview/#generated-data-during-training","text":"During training, the Anet ImJoy plugin stores the model ( .hdf5 files) together with necessary events to call Tensorflow in a folder __model__ within the data folder TODO - currently in the workspace . Each training has a dedicated user-defined name, allowing to store results of different trainings. The example below shows the __model__ folder containg the results of two trainings ( test1 , test2 ). The file test1 x_model__.hdf5 containes the model, the folder test1 xlogs the events file for TensorBoard. . \u251c\u2500 __model__/ \u251c\u2500 test1 x_model__.hdf5 \u251c\u2500 test2 x_model__.hdf5 \u2502 \u251c\u2500 test1 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359258.HOSTURL \u2502 \u251c\u2500 test2 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359260.HOSTURL .","title":"Generated data during training"},{"location":"annapalm/annapalm-overview/#using-tensorboard","text":"TensorBoard provides a suite of visualization tools to make it easier to understand, debug, and optimize DeepLearning programs. To use Tensorboard, open a terminal and navigate to the folder containing the events file, e.g. test1 xlogs from the example above. Then call TensorBoard with the following command. python -m tensorboard.main --logdir=. TensorBoard 1.5.1 at LOCALHOST:6006 (Press CTRL+C to quit) You will obtain the local host LOCALHOST address to open Tensorboard, open a browser and paste the entire address. If you receive an error message such as This site can\u2019t be reached , replace the local host address by 127.0.01 , e.g. for the example above: http://127.0.0.1:6006 .","title":"Using Tensorboard"},{"location":"segment/segment-overview/","text":"Anet-Lite \u00b6 Generated data during training \u00b6 During training, the Anet ImJoy plugin stores the model ( .hdf5 files) together with necessary events to call Tensorflow in a folder __model__ within the data folder TODO - currently in the workspace . Each training has a dedicated user-defined name, allowing to store results of different trainings. The example below shows the __model__ folder containg the results of two trainings ( test1 , test2 ). The file test1 x_model__.hdf5 containes the model, the folder test1 xlogs the events file for TensorBoard. . \u251c\u2500 __model__/ \u251c\u2500 test1 x_model__.hdf5 \u251c\u2500 test2 x_model__.hdf5 \u2502 \u251c\u2500 test1 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359258.HOSTURL \u2502 \u251c\u2500 test2 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359260.HOSTURL . Using Tensorboard \u00b6 TensorBoard provides a suite of visualization tools to make it easier to understand, debug, and optimize DeepLearning programs. To use Tensorboard, open a terminal and navigate to the folder containing the events file, e.g. test1 xlogs from the example above. Then call TensorBoard with the following command. python -m tensorboard.main --logdir=. TensorBoard 1.5.1 at LOCALHOST:6006 (Press CTRL+C to quit) You will obtain the local host LOCALHOST address to open Tensorboard, open a browser and paste the entire address. If you receive an error message such as This site can\u2019t be reached , replace the local host address by 127.0.01 , e.g. for the example above: http://127.0.0.1:6006 .","title":"Overview"},{"location":"segment/segment-overview/#anet-lite","text":"","title":"Anet-Lite"},{"location":"segment/segment-overview/#generated-data-during-training","text":"During training, the Anet ImJoy plugin stores the model ( .hdf5 files) together with necessary events to call Tensorflow in a folder __model__ within the data folder TODO - currently in the workspace . Each training has a dedicated user-defined name, allowing to store results of different trainings. The example below shows the __model__ folder containg the results of two trainings ( test1 , test2 ). The file test1 x_model__.hdf5 containes the model, the folder test1 xlogs the events file for TensorBoard. . \u251c\u2500 __model__/ \u251c\u2500 test1 x_model__.hdf5 \u251c\u2500 test2 x_model__.hdf5 \u2502 \u251c\u2500 test1 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359258.HOSTURL \u2502 \u251c\u2500 test2 xlogs/ \u2502 \u251c\u2500 events.out.tfevents.1539359260.HOSTURL .","title":"Generated data during training"},{"location":"segment/segment-overview/#using-tensorboard","text":"TensorBoard provides a suite of visualization tools to make it easier to understand, debug, and optimize DeepLearning programs. To use Tensorboard, open a terminal and navigate to the folder containing the events file, e.g. test1 xlogs from the example above. Then call TensorBoard with the following command. python -m tensorboard.main --logdir=. TensorBoard 1.5.1 at LOCALHOST:6006 (Press CTRL+C to quit) You will obtain the local host LOCALHOST address to open Tensorboard, open a browser and paste the entire address. If you receive an error message such as This site can\u2019t be reached , replace the local host address by 127.0.01 , e.g. for the example above: http://127.0.0.1:6006 .","title":"Using Tensorboard"}]}